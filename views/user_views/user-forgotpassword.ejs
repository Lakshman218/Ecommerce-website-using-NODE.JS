<%- include("../partials/user-header")%>
<main class="main">
  <section class="pt-150 pb-150">
      <div class="container">
          <div class="row">
              <div class="col-lg-10 m-auto">
                  <div class="row  d-flex align-items-center justify-content-center" >

                      <div class="col-lg-6">
                          <div class="login_wrap widget-taber-content p-30 background-white border-radius-5">
                              <div class="padding_eight_all bg-white">
                                  <div class="heading_s1">
                                      <h3 class="mb-30">Password Reset</h3>
                                  </div>
                                  <%if (typeof error !== 'undefined') {%>
                                      <p class="text-center" style="color:red;"><%= error %></p>
                                  <%}%>
                                  

                                  <form method="post" onsubmit="return validateForm()">
                                    <div class="form-group">
                                      <label for="email">Email address</label>
                                      <input type="email" class="form-control" id="email" name="email" placeholder="Enter Registered email ID" required />
                                      <div id="emailError" class="error-message"></div>
                                    </div>
                                    <div class="form-group">
                                      <button type="button" class="btn btn-sm btn-fill-out btn-block" data-mdb-ripple-color="dark" id="sendOTPButton" name="sendOTPBtn">Send OTP</button>
                                    </div>
                    
                                    <div class="form-group">
                                        <input type="text" required="" name="otpInput" placeholder="Enter OTP" id="otpInput">
                                    </div>
                    
                                    <div class="form-group">
                                        <div id="timer" class="mb-3" style="display: none; color: blue;"></div>
                                    </div>
                                    
                                    <div class="form-group d-flex justify-content-end">
                                        <button class="btn btn-primary" type="button" id="resendOTPButton" style="display: none;">Resend OTP</button>
                                    </div>
                                    
                    
                                    <div class="form-group">
                                        <button type="button" class="btn btn-sm btn-fill-out btn-block" id="verifyOTPButton" name="verifyOTPBtn">Verify OTP</button>
                                    </div>
                                  </form>
                                  
                                  <div class="text-muted text-center"> <a href="/login">Go back</a></div>
                              </div>
                          </div>
                      </div>
                  </div>
              </div>
          </div>
      </div>
  </section>
</main>

    <script>
      // function enableVerifyButton(enable) {
      // const verifyOTPButton = document.getElementById("verifyOTPButton");
      // verifyOTPButton.disabled = !enable;
      // }
      
      let timerElement = document.getElementById('timer');
      let countdown;

      const sendOTPButton = document.getElementById("sendOTPButton");
      const resendOTPButton = document.getElementById("resendOTPButton");
      const verifyOTPButton = document.getElementById("verifyOTPButton");

      sendOTPButton.addEventListener("click", function (e) {
          e.preventDefault();

          // Validate the form before sending OTP
          if (validateForm()) {
              const email = document.querySelector('input[name="email"]').value;
              console.log("email",email);
              fetch(`/passwordresetotp?email=${email}`)
                  .then((response) => {
                      if (!response.ok) {
                          throw new Error(`HTTP error! status: ${response.status}`);
                      }
                      return response.json();
                  })
                  .then((data) => {
                      console.log("Response from server", data);

                  if (data.error) {
                  // User already exists, display error message
                  Swal.fire({
                      position: 'top-center',
                      icon: 'error',
                      title: data.error,
                      showConfirmButton: false,
                      timer: 1500
                  });
                  } else {
                  // User doesn't exist, continue with OTP sending logic
                  Swal.fire({
                      position: 'top-center',
                      icon: 'success',
                      title: 'OTP sent to email successfully',
                      showConfirmButton: false,
                      timer: 1500
                  });
                  startResendTimer();
                  }
                  })
                  .catch((error) => {
                      console.error("Error sending OTP", error);
                  });
          } else {
              // Form is not valid, display an error message or handle it accordingly
              // alert('Form is not valid. Please check your inputs.');
              // Swal.fire({
              //     icon: "error",
              //     title: "Oops...",
              //     text: "Error sending OTP.",
              //     footer: '<a href="#">Why do I have this issue?</a>'
              //     });
          }
          // enableVerifyButton(true);
      });

      

      resendOTPButton.addEventListener("click", function (e) {
          e.preventDefault();

          clearInterval(countdown);
          // Validate the form before sending OTP
          if (validateForm()) {
              const email = document.querySelector('input[name="email"]').value;

              fetch(`/passwordresetotp?email=${email}`)
                  .then((response) => {
                      if (!response.ok) {
                          throw new Error(`HTTP error! status: ${response.status}`);
                      }
                      return response.json();
                  })
                  .then((data) => {
                      console.log("Response from server", data);

                  if (data.error) {
                  // User already exists, display error message
                  Swal.fire({
                      position: 'top-center',
                      icon: 'error',
                      title: data.error,
                      showConfirmButton: false,
                      timer: 1500
                  });
                  } else {
                  // User doesn't exist, continue with OTP sending logic
                  Swal.fire({
                      position: 'top-center',
                      icon: 'success',
                      title: 'OTP sent to email successfully',
                      showConfirmButton: false,
                      timer: 1500
                  });
                  startResendTimer();
                  }
                  })
                  .catch((error) => {
                      console.error("Error sending OTP", error);
                  });
          } else {
              // Form is not valid, display an error message or handle it accordingly
              // alert('Form is not valid. Please check your inputs.');
              // Swal.fire({
              //     icon: "error",
              //     title: "Oops...",
              //     text: "Error sending OTP.",
              //     footer: '<a href="#">Why do I have this issue?</a>'
              //     });
          }   
          // enableVerifyButton(true);
      });

      function startResendTimer() {
          let remainingTime = 30;
          timerElement.style.display = "block";
          resendOTPButton.style.display = "none";
          sendOTPButton.style.display = "none"; // Hide the sendOTPButton

          countdown = setInterval(() => {
              timerElement.textContent = `Resend in ${remainingTime} seconds`;
              remainingTime--;

              if (remainingTime < 0) {
                  clearInterval(countdown);
                  timerElement.style.display = "none";
                  resendOTPButton.style.display = "block";
                  sendOTPButton.style.display = "none"; 
              }
          }, 1000);
      }

      // Function to validate the form
      function validateForm() {
          // Reset previous error messages
          resetErrorMessages();

          const email = document.getElementById('email').value;

          // Validate email
          const emailPattern = /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$/;
          if (!email.match(emailPattern)) {
              showError('emailError', 'Invalid email address');
              return false;
          }

          return true; // Placeholder, replace with your actual validation logic
      }

          // Function to show error message
      function showError(elementId, message) {
          const errorElement = document.getElementById(elementId);
          errorElement.textContent = message;
      }

      // Function to reset error messages
      function resetErrorMessages() {
          const errorElements = document.querySelectorAll('.error-message');
          errorElements.forEach((element) => {
              element.textContent = '';
          });
      }


      // verify otp

      verifyOTPButton.addEventListener("click", function(e) {
          e.preventDefault();

          // const phoneNumber = document.querySelector('input[name="phoneNumber"]').value;
          const otpInput = document.querySelector('input[name="otpInput"]').value;
          fetch(`/verifypasswordresetotp?otpInput=${otpInput}`,{
              method: "POST"})
          
          .then((Response) => {
              if(!Response.ok) {
                  throw new Error(`HTTP error! status: ${Response.status}`)
              }
              return Response.json();
          })
          .then((data)=>{
              console.log("Response from serve", data)
              Swal.fire({
                  position: 'top-center',
                  icon: 'success',
                  title: 'OTP verified succssfully',
                  showConfirmButton: false,
                  timer: 1500
              })
              // startResendTimer()
              window.location.href = `/changePassword?email=${email.value}`;

          })
          .catch((error)=>{
              console.error("Invalid OTP",error);
              Swal.fire({
              position: 'top-center',
              icon: 'error',
              title: "Invalid OTP",
              showConfirmButton: false,
              timer: 1500
          });
          })
      }) 

  </script>

    <!-- <script>
      document.addEventListener("DOMContentLoaded", () => {
        const email = document.getElementById("email");
        const otp = document.getElementById("otp");
        const timerElement = document.getElementById("timer");
        const verify = document.getElementById("verifyotp");
        // Define the timer function
        function startTimer(duration) {
          let timeLeft = duration;
          timerElement.textContent = timeLeft + " seconds";

          const interval = setInterval(() => {
            if (timeLeft === 0) {
              clearInterval(interval);
              timerElement.textContent = "0 seconds";
              // Enable the resend OTP button
              document.querySelector(".resend-otp").style.display = "block";
            } else {
              timeLeft--;
              timerElement.textContent = timeLeft + " seconds";
            }
          }, 1000);
        }

        function isValidEmail(email) {
          const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
          return emailRegex.test(email);
        }

        function isValidOTP(otp) {
          const otpRegex = /^[0-9]{6}$/;
          return otpRegex.test(otp);
        }

        async function sendOTP() {
          try {
            if (!isValidEmail(email.value)) {
              Swal.fire({
                icon: "error",
                title: "Oops...",
                text: "Enter a valid email ID!",
              });
              return;
            }
            console.log("hereee its me");
            const response = await fetch(
              `/passwordresetotp?email=${email.value}`
            );
            if (response.ok) {
              Swal.fire({
                position: "top-centre",
                icon: "success",
                title: "OTP has been sent to Registered Phone Number.",
                showConfirmButton: false,
                timer: 1500,
              });
              startTimer(60);
              otp.style.display = "block";
              verify.style.display = "block";
            } else {
              Swal.fire({
                icon: "error",
                title:
                  "No user found on this Email Try again with registered Email ID.",
                text: "Something went wrong!",
                footer: '<a href="">Why do I have this issue?</a>',
              });
            }
          } catch (error) {
            console.error("Error:", error);
            Swal.fire({
              icon: "error",
              title: "An error occurred. Please try again.",
              text: "Something went wrong!",
              footer: '<a href="">Why do I have this issue?</a>',
            });
          }
        }

        async function verifyOTP() {
          try {
            if (!isValidEmail(email.value)) {
              Swal.fire({
                icon: "error",
                title: "Oops.",
                text: "Enter a valid Email!",
                footer: '<a href="">Why do I have this issue?</a>',
              });
              return;
            }
            if (!isValidOTP(otp.value)) {
              Swal.fire({
                icon: "error",
                title: "Enter a valid OTP",
                text: "Something went wrong!",
              });
              return;
            }

            const response = await fetch(
              `/passwordResetVerifyOtp/verifyOtp?email=${email.value}&otp=${otp.value}`
            );
            if (response.ok) {
              Swal.fire({
                position: "top-end",
                icon: "success",
                title: "OTP Verified successful!",
                showConfirmButton: false,
                timer: 1500,
              })
                .then(() => {
                  window.location.href = `/changePassword?email=${email.value}`;
                })
                .catch((err) => {
                  console.error(err);
                });
            } else {
              Swal.fire({
                icon: "error",
                title: "Incorrect OTP",
                text: "Something went wrong!",
              });
            }
          } catch (error) {
            console.error("Error:", error);
            Swal.fire({
              icon: "error",
              title: "An error occurred. Please try again.",
              text: "Something went wrong!",
            });
          }
        }

        document.querySelector(".send-otp").addEventListener("click", (e) => {
          e.preventDefault();
          sendOTP();
          
        });
        document.querySelector(".resend-otp").addEventListener("click", (e) => {
          e.preventDefault();
          sendOTP();
          startTimer(60);
        });

        document.querySelector(".verify-otp").addEventListener("click", (e) => {
          e.preventDefault();
          verifyOTP();
        });
      });
    </script> -->

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>


    <script src="/userAssets/js/vendor/modernizr-3.6.0.min.js"></script>
    <script src="/userAssets/js/vendor/jquery-3.6.0.min.js"></script>
    <script src="/userAssets/js/vendor/jquery-migrate-3.3.0.min.js"></script>
    <script src="/userAssets/js/vendor/bootstrap.bundle.min.js"></script>
    <script src="/userAssets/js/plugins/slick.js"></script>
    <script src="/userAssets/js/plugins/jquery.syotimer.min.js"></script>
    <script src="/userAssets/js/plugins/wow.js"></script>
    <script src="/userAssets/js/plugins/jquery-ui.js"></script>
    <script src="/userAssets/js/plugins/perfect-scrollbar.js"></script>
    <script src="/userAssets/js/plugins/magnific-popup.js"></script>
    <script src="/userAssets/js/plugins/select2.min.js"></script>
    <script src="/userAssets/js/plugins/waypoints.js"></script>
    <script src="/userAssets/js/plugins/counterup.js"></script>
    <script src="/userAssets/js/plugins/jquery.countdown.min.js"></script>
    <script src="/userAssets/js/plugins/images-loaded.js"></script>
    <script src="/userAssets/js/plugins/isotope.js"></script>
    <script src="/userAssets/js/plugins/scrollup.js"></script>
    <script src="/userAssets/js/plugins/jquery.vticker-min.js"></script>
    <script src="/userAssets/js/plugins/jquery.theia.sticky.js"></script>
    <!-- Template  JS -->
    <script src="/userAssets/js/maind134.js?v=3.4"></script>

    <%- include("../partials/user-footer")%>